<design_size title="Design Size Report">
    <item name="Total Instructions per Compilation Phase">
        <table>
            <keys size="4">Phase, Step, Instructions, Description</keys>
            <column name="Compile/Link">, 534, After all functions are compiled and linked into a single design</column>
            <column name="">, , </column>
            <column name="Unroll/Inline">, , After user unroll and inline pragmas are applied</column>
            <column name="">(1) unroll, 304, user unroll pragmas are applied</column>
            <column name="">(2) simplification, 279, simplification of applied user unroll pragmas</column>
            <column name="">(3) inline, 260, user inline pragmas are applied</column>
            <column name="">(4) simplification, 257, simplification of applied user inline pragmas</column>
            <column name="">, , </column>
            <column name="Array/Struct">, , After user array partition and struct aggregate/disaggregate pragmas are applied</column>
            <column name="">(1) array partition, 239, user array partition pragmas are applied</column>
            <column name="">(2) simplification, 239, simplification of applied user array partition &amp; struct aggregate/disaggregate pragmas</column>
            <column name="">(3) aggregate/disaggregate , 239, user struct aggregate/disaggregate pragmas are applied</column>
            <column name="">(4) array reshape, 239, apply array reshape pragmas</column>
            <column name="">(5) access patterns, 242, array access pattern optmizations</column>
            <column name="">, , </column>
            <column name="Performance">, , After transformations are applied to meet performance pragma targets</column>
            <column name="">(1) loop simplification, 239, loop and instruction simplification</column>
            <column name="">(2) parallelization, 239, loops are unrolled or pipelined to meet performance targets</column>
            <column name="">(3) array partition, 239, arrays are partitioned to meet performance targets</column>
            <column name="">(4) simplification, 239, simplification of design after performance transformations</column>
            <column name="">, , </column>
            <column name="HW Transforms">, , After hardware transfomations</column>
            <column name="">(1) lowering, 265, initial conversion to HW specific instructions</column>
            <column name="">(2) optimizations, 353, high level synthesis optimizations</column>
        </table>
    </item>
    <item name="Instructions per Function for each Compilation Phase">
        <hiertable>
            <header size="7" col0="Function" col1="Location" col2="Compile/Link" col3="Unroll/Inline" col4="Array/Struct" col5="Performance" col6="HW Transforms"/>
            <rows>
                <row id="0" col0="forward" col1="DepthwiseSeparableConvBlock.cpp:167" col2="534" col3="257" col4="242" col5="239" col6="353">
                    <row id="2" col0="node4" col1="DepthwiseSeparableConvBlock.cpp:137" col2="117" col3="57" col4="57" col5="57" col6="81"/>
                    <row id="4" col0="node3" col1="DepthwiseSeparableConvBlock.cpp:96" col2="143" col3="75" col4="75" col5="75" col6="98"/>
                    <row id="1" col0="node2" col1="DepthwiseSeparableConvBlock.cpp:59" col2="102" col3="48" col4="51" col5="48" col6="68"/>
                    <row id="5" col0="node1" col1="DepthwiseSeparableConvBlock.cpp:33" col2="67" col3="22" col4="22" col5="22" col6="38"/>
                    <row id="3" col0="node0" col1="DepthwiseSeparableConvBlock.cpp:17" col2="49" col3="19" col4="19" col5="19" col6="31"/>
                </row>
            </rows>
            <notes/>
        </hiertable>
    </item>
    <item name="Design Size Message Settings">
        <table>
            <keys size="3">Message Setting, Value, Description</keys>
            <column name="config_compile -design_size_maximum_warning">100000, Show a warning when total design instructions exceeds this value</column>
        </table>
    </item>
</design_size>

